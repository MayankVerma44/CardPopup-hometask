{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAYANK\\\\cardpayment-implementation-hometask\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport RevolutCheckout from '@revolut/checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orderToken, setOrderToken] = useState('');\n  const [paymentStatus, setPaymentStatus] = useState(null);\n\n  // Function to create an order and get the token from the backend\n  const createOrder = async () => {\n    try {\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/create-order', {\n        amount: 100,\n        // The amount for the order\n        currency: 'GBP' // The currency (adjust as needed)\n      });\n      console.log('Order Response:', data); // Log the token to check if it's correct\n      setOrderToken(data.token); // Set the order token from the backend\n      setPaymentStatus(null); // Reset payment status\n    } catch (error) {\n      console.error('Error creating order:', error);\n      setPaymentStatus('Order creation failed');\n    }\n  };\n\n  // Handle the payment process when the user clicks the 'Pay' button\n  const handlePayment = async () => {\n    if (!orderToken) {\n      alert('Order token not found. Create an order first.');\n      return;\n    }\n    try {\n      // Initialize the RevolutCheckout widget with the token\n      const {\n        payWithPopup\n      } = await RevolutCheckout(orderToken);\n      console.log('payWithPopup initialized:', payWithPopup);\n\n      // Attach event listener to the Pay button\n      const payButton = document.getElementById(\"pay-button\");\n      payButton.addEventListener(\"click\", function () {\n        payWithPopup({\n          email: \"example.customer@example.com\",\n          // Provide email if it's not included during order creation\n          onSuccess() {\n            // Handle successful payment\n            window.alert(\"Thank you for your payment!\");\n          },\n          onError(error) {\n            // Handle payment error\n            window.alert(`Something went wrong. ${error}`);\n          }\n        });\n      });\n    } catch (error) {\n      console.error('Error initializing RevolutCheckout widget:', error);\n      setPaymentStatus('Failed to initialize widget');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Revolut Card Payment Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createOrder,\n      style: styles.button,\n      children: \"Create Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), orderToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pay-button\",\n        type: \"button\",\n        onClick: handlePayment,\n        style: styles.payButton,\n        children: \"Pay with Revolut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), paymentStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", paymentStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bWR79Mcr77qUmWRwcC921nJMqkM=\");\n_c = App;\nconst styles = {\n  button: {\n    padding: '12px 24px',\n    fontSize: '16px',\n    cursor: 'pointer',\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    margin: '10px'\n  },\n  payButton: {\n    padding: '12px 24px',\n    fontSize: '16px',\n    cursor: 'pointer',\n    backgroundColor: '#1e88e5',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    margin: '10px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","RevolutCheckout","jsxDEV","_jsxDEV","App","_s","orderToken","setOrderToken","paymentStatus","setPaymentStatus","createOrder","data","post","amount","currency","console","log","token","error","handlePayment","alert","payWithPopup","payButton","document","getElementById","addEventListener","email","onSuccess","window","onError","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","styles","button","id","type","_c","fontSize","cursor","backgroundColor","color","border","borderRadius","margin","$RefreshReg$"],"sources":["C:/Users/MAYANK/cardpayment-implementation-hometask/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport RevolutCheckout from '@revolut/checkout';\n\nconst App = () => {\n    const [orderToken, setOrderToken] = useState('');\n    const [paymentStatus, setPaymentStatus] = useState(null);\n\n    // Function to create an order and get the token from the backend\n    const createOrder = async () => {\n        try {\n            const { data } = await axios.post('http://localhost:5000/api/create-order', {\n                amount: 100,  // The amount for the order\n                currency: 'GBP',  // The currency (adjust as needed)\n            });\n\n            console.log('Order Response:', data); // Log the token to check if it's correct\n            setOrderToken(data.token);  // Set the order token from the backend\n            setPaymentStatus(null);  // Reset payment status\n        } catch (error) {\n            console.error('Error creating order:', error);\n            setPaymentStatus('Order creation failed');\n        }\n    };\n\n    // Handle the payment process when the user clicks the 'Pay' button\n    const handlePayment = async () => {\n        if (!orderToken) {\n            alert('Order token not found. Create an order first.');\n            return;\n        }\n\n        try {\n            // Initialize the RevolutCheckout widget with the token\n            const { payWithPopup } = await RevolutCheckout(orderToken);\n\n            console.log('payWithPopup initialized:', payWithPopup);\n\n            // Attach event listener to the Pay button\n            const payButton = document.getElementById(\"pay-button\");\n            payButton.addEventListener(\"click\", function () {\n                payWithPopup({\n                    email: \"example.customer@example.com\",  // Provide email if it's not included during order creation\n                    onSuccess() {\n                        // Handle successful payment\n                        window.alert(\"Thank you for your payment!\");\n                    },\n                    onError(error) {\n                        // Handle payment error\n                        window.alert(`Something went wrong. ${error}`);\n                    }\n                });\n            });\n\n        } catch (error) {\n            console.error('Error initializing RevolutCheckout widget:', error);\n            setPaymentStatus('Failed to initialize widget');\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px', textAlign: 'center' }}>\n            <h1>Revolut Card Payment Integration</h1>\n            <button onClick={createOrder} style={styles.button}>Create Order</button>\n            <br /><br />\n            {orderToken && (\n                <div>\n                    <button id=\"pay-button\" type=\"button\" onClick={handlePayment} style={styles.payButton}>\n                        Pay with Revolut\n                    </button>\n                </div>\n            )}\n            {paymentStatus && <p>Status: {paymentStatus}</p>}\n        </div>\n    );\n};\n\nconst styles = {\n    button: {\n        padding: '12px 24px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#4CAF50',  \n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '10px',\n    },\n    payButton: {\n        padding: '12px 24px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#1e88e5',  \n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '10px',\n    }\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}